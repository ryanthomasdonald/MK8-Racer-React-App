{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import{createStore}from\"redux\";import{Provider}from\"react-redux\";import{BrowserRouter as Router,Route,Routes}from\"react-router-dom\";import BaseLayout from\"./components/layout/BaseLayout\";import reducer from\"./reducers/index\";import'bootstrap/dist/css/bootstrap.min.css';import'./index.css';import App from'./App';// import Sample from './components/Sample';\nimport Builder from'./components/Builder.js';import Cart from'./components/Cart';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var saveToLocalStorage=function saveToLocalStorage(reduxGlobalState){// serialization = converting js object into a string\ntry{var serializeState=JSON.stringify(reduxGlobalState);localStorage.setItem(\"state\",serializeState);}catch(e){console.log(e);}};var loadFromLocalStorage=function loadFromLocalStorage(){// deserialize\nvar deserializeState=localStorage.getItem(\"state\");if(deserializeState===null){return undefined;}else{return JSON.parse(deserializeState);}};var persistedState=loadFromLocalStorage();var store=createStore(reducer,persistedState,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__());store.subscribe(function(){// happens every time there is a change to global state\nsaveToLocalStorage(store.getState());});ReactDOM.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(BaseLayout,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(App,{})}),/*#__PURE__*/_jsx(Route,{path:\"/builder\",element:/*#__PURE__*/_jsx(Builder,{})}),/*#__PURE__*/_jsx(Route,{path:\"/cart\",element:/*#__PURE__*/_jsx(Cart,{})})]})})})})}),document.getElementById('root'));","map":{"version":3,"sources":["/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/index.js"],"names":["React","ReactDOM","createStore","Provider","BrowserRouter","Router","Route","Routes","BaseLayout","reducer","App","Builder","Cart","saveToLocalStorage","reduxGlobalState","serializeState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","deserializeState","getItem","undefined","parse","persistedState","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","render","document","getElementById"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,OAAQC,WAAR,KAA0B,OAA1B,CACA,OAAQC,QAAR,KAAuB,aAAvB,CACA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,CAAiCC,KAAjC,CAAwCC,MAAxC,KAAqD,kBAArD,CACA,MAAOC,CAAAA,UAAP,KAAuB,gCAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,kBAApB,CACA,MAAO,sCAAP,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,C,wFAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,gBAAD,CAAsB,CAC/C;AACA,GAAG,CACD,GAAMC,CAAAA,cAAc,CAAGC,IAAI,CAACC,SAAL,CAAeH,gBAAf,CAAvB,CACAI,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BJ,cAA9B,EACD,CACD,MAAMK,CAAN,CAAQ,CACNC,OAAO,CAACC,GAAR,CAAYF,CAAZ,EACD,CACF,CATD,CAWA,GAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC;AACA,GAAMC,CAAAA,gBAAgB,CAAGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAzB,CACA,GAAGD,gBAAgB,GAAK,IAAxB,CAA6B,CAC3B,MAAOE,CAAAA,SAAP,CACD,CAFD,IAGI,CACF,MAAOV,CAAAA,IAAI,CAACW,KAAL,CAAWH,gBAAX,CAAP,CACD,CACF,CATD,CAWA,GAAMI,CAAAA,cAAc,CAAGL,oBAAoB,EAA3C,CAEA,GAAMM,CAAAA,KAAK,CAAG3B,WAAW,CAACO,OAAD,CAAUmB,cAAV,CAA0BE,MAAM,CAACC,4BAAP,EAAuCD,MAAM,CAACC,4BAAP,EAAjE,CAAzB,CAEAF,KAAK,CAACG,SAAN,CAAgB,UAAM,CACpB;AACAnB,kBAAkB,CAACgB,KAAK,CAACI,QAAN,EAAD,CAAlB,CACD,CAHD,EAKAhC,QAAQ,CAACiC,MAAT,cACE,KAAC,KAAD,CAAO,UAAP,wBACE,KAAC,QAAD,EAAU,KAAK,CAAEL,KAAjB,uBACE,KAAC,MAAD,wBACE,KAAC,UAAD,wBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,OAAO,cAAE,KAAC,GAAD,IAAzB,EADF,cAGE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,cAAE,KAAC,OAAD,IAAhC,EAHF,cAIE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,OAAO,cAAE,KAAC,IAAD,IAA7B,EAJF,GADF,EADF,EADF,EADF,EADF,CAeEM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAfF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from \"redux\"\nimport {Provider} from \"react-redux\"\nimport {BrowserRouter as Router, Route, Routes} from \"react-router-dom\"\nimport BaseLayout from \"./components/layout/BaseLayout\"\nimport reducer from \"./reducers/index\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n// import Sample from './components/Sample';\nimport Builder from './components/Builder.js';\nimport Cart from './components/Cart';\n\nconst saveToLocalStorage = (reduxGlobalState) => {\n  // serialization = converting js object into a string\n  try{\n    const serializeState = JSON.stringify(reduxGlobalState)\n    localStorage.setItem(\"state\", serializeState)\n  }\n  catch(e){\n    console.log(e)\n  }\n}\n\nconst loadFromLocalStorage = () => {\n  // deserialize\n  const deserializeState = localStorage.getItem(\"state\")\n  if(deserializeState === null){\n    return undefined\n  }\n  else{\n    return JSON.parse(deserializeState)\n  }\n}\n\nconst persistedState = loadFromLocalStorage()\n\nconst store = createStore(reducer, persistedState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nstore.subscribe(() => {\n  // happens every time there is a change to global state\n  saveToLocalStorage(store.getState())\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <BaseLayout>\n          <Routes>\n            <Route path=\"/\" element={<App />}/>\n            {/* <Route path=\"/sample\" element={<Sample />}/> */}\n            <Route path=\"/builder\" element={<Builder />}/>\n            <Route path=\"/cart\" element={<Cart />}/>\n          </Routes>\n        </BaseLayout>\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}