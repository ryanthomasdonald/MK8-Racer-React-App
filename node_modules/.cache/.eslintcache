[{"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/index.js":"1","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/App.js":"2","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/reducers/index.js":"3","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/components/Sample.js":"4","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/components/layout/BaseLayout.js":"5","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/reducers/sampleReducer.js":"6","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/components/layout/Header.js":"7","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/actions/templateActions.js":"8","/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/actions/types.js":"9","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/index.js":"10","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/App.js":"11","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/reducers/index.js":"12","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/layout/BaseLayout.js":"13","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/layout/Header.js":"14","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/actions/types.js":"15","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js":"16","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Cart.js":"17","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/assets/MK8-data.js":"18","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/reducers/builderReducer.js":"19","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/actions/builderActions.js":"20"},{"size":1588,"mtime":1638461443356,"results":"21","hashOfConfig":"22"},{"size":105,"mtime":1638461388746,"results":"23","hashOfConfig":"22"},{"size":230,"mtime":1638458917431,"results":"24","hashOfConfig":"22"},{"size":627,"mtime":1638461314929,"results":"25","hashOfConfig":"22"},{"size":209,"mtime":1638458559658,"results":"26","hashOfConfig":"22"},{"size":414,"mtime":1638459406493,"results":"27","hashOfConfig":"22"},{"size":246,"mtime":1638461482210,"results":"28","hashOfConfig":"22"},{"size":151,"mtime":1638459187464,"results":"29","hashOfConfig":"22"},{"size":36,"mtime":1638459143662,"results":"30","hashOfConfig":"22"},{"size":1796,"mtime":1638837505754,"results":"31","hashOfConfig":"32"},{"size":689,"mtime":1639255892464,"results":"33","hashOfConfig":"32"},{"size":188,"mtime":1639172023149,"results":"34","hashOfConfig":"32"},{"size":209,"mtime":1638458559658,"results":"35","hashOfConfig":"32"},{"size":1870,"mtime":1639261043087,"results":"36","hashOfConfig":"32"},{"size":292,"mtime":1638978764172,"results":"37","hashOfConfig":"32"},{"size":11883,"mtime":1639251083299,"results":"38","hashOfConfig":"32"},{"size":13078,"mtime":1639250814590,"results":"39","hashOfConfig":"32"},{"size":36662,"mtime":1639159068341,"results":"40","hashOfConfig":"32"},{"size":3919,"mtime":1639093419119,"results":"41","hashOfConfig":"32"},{"size":1391,"mtime":1638978873061,"results":"42","hashOfConfig":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"m1x0ey",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1jdq502",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/index.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/App.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/reducers/index.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/components/Sample.js",["86"],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/components/layout/BaseLayout.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/reducers/sampleReducer.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/components/layout/Header.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/actions/templateActions.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/redux/week-13/redux-template/src/actions/types.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/index.js",[],["87","88"],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/App.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/reducers/index.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/layout/BaseLayout.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/layout/Header.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/actions/types.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Builder.js",["89","90","91","92","93","94","95","96","97","98","99","100"],"import React, {useEffect, useState} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {loadInit, updateDriver, updateKart, updateTire, updateGlider, addToCart} from \"../actions/builderActions\"\nimport \"chart.js/auto\"\nimport {Chart} from \"react-chartjs-2\"\nimport MKData from \"../assets/MK8-data.js\"\nimport Fade from \"react-reveal/Fade\"\nimport Button from \"react-bootstrap/Button\"\nimport Form from \"react-bootstrap/Form\"\nimport {Link} from \"react-router-dom\"\nimport \"./Builder.css\"\n\nconst Builder = () => {\n    const [formDriver, setFormDriver] = useState(41)\n    const [formKart, setFormKart] = useState(1)\n    const [formTire, setFormTire] = useState(84)\n    const [formGlider, setFormGlider] = useState(105)\n    const driverState = useSelector(state => state.builderReducer.driver)\n    const kartState = useSelector(state => state.builderReducer.kart)\n    const tireState = useSelector(state => state.builderReducer.tire)\n    const gliderState = useSelector(state => state.builderReducer.glider)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(loadInit())\n    }, [])\n    const karts = MKData.filter(item => item.type === \"kart\")\n    const drivers = MKData.filter(item => item.type === \"driver\")\n    const tires = MKData.filter(item => item.type === \"tire\")\n    const gliders = MKData.filter(item => item.type === \"glider\")\n\n    return (\n    <>\n        <div>\n            <Fade top>\n                <div className=\"container\">\n                    <div className=\"row pt-2 pb-2 mx-0 justify-content-center\">\n                        <img style={{width: \"750px\"}} src=\"img/build-a-kart.png\" />\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row mx-0\">\n                        <div className=\"col col-lg col-md-6 d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${driverState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"drivers\" id=\"drivers\" value={formDriver} onChange={(e) => setFormDriver(e.target.value)}>\n                                        {drivers.map(driver => {\n                                            return <option key={driver.id} value={driver.id}>{driver.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-blue mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateDriver(parseInt(formDriver)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"col d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${kartState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"karts\" id=\"karts\" value={formKart} onChange={(e) => setFormKart(e.target.value)}>\n                                        {karts.map(kart => {\n                                            return <option key={kart.id} value={kart.id}>{kart.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-green mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateKart(parseInt(formKart)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"col d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${tireState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"tires\" id=\"tires\" value={formTire} onChange={(e) => setFormTire(e.target.value)}>\n                                        {tires.map(tire => {\n                                            return <option key={tire.id} value={tire.id}>{tire.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-yellow mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateTire(parseInt(formTire)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                        <div className=\"col d-flex justify-content-center\">\n                            <Form className=\"text-center pt-4\">\n                                <div>\n                                    <img src={`img/items/${gliderState.img}`} />\n                                </div>\n                                <div>\n                                    <Form.Select className=\"bg-dark mt-1 text-center text-white\" name=\"gliders\" id=\"gliders\" value={formGlider} onChange={(e) => setFormGlider(e.target.value)}>\n                                        {gliders.map(glider => {\n                                            return <option key={glider.id} value={glider.id}>{glider.name}</option>\n                                        })}\n                                    </Form.Select>\n                                    <Button className=\"btn button-red mt-2 text-white\" type=\"button\" value=\"submit\" onClick={() => dispatch(updateGlider(parseInt(formGlider)))}><img width=\"150px\" src=\"/img/update-button.png\" /></Button>\n                                </div>\n                            </Form>\n                        </div>\n                    </div>\n                    <div className=\"col d-flex pt-4 justify-content-center\">\n                        <Link to=\"/cart\">\n                            <Button className=\"btn button-gray mt-3 mb-3\" type=\"button\" value=\"submit\" onClick={() => dispatch(addToCart(formDriver, formKart, formTire, formGlider))}><img width=\"450px\" src=\"/img/add-to-kart.png\" /></Button>\n                        </Link>\n                    </div>\n                </div>\n            </Fade>\n        </div>\n        <div className=\"container mb-5\">\n            <Fade>\n                <div className=\"container\">\n                    <div className=\"row mx-0 pt-5 pb-4 justify-content-center\">\n                        <img style={{width: \"700px\"}} src=\"img/kart-chart.png\" />\n                    </div>\n                </div>\n                <Chart\n                    type=\"bar\"\n                    data={{\n                        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                        datasets: [\n                            {\n                                label: \"Driver\",\n                                data: [driverState.wg, driverState.ac, driverState.on, driverState.of, driverState.mt, driverState.sl, driverState.sw, driverState.sa, driverState.sg, driverState.tl, driverState.tw, driverState.ta, driverState.tg],\n                                backgroundColor: [\n                                    'rgba(0, 70, 240, 1)',\n                                ],\n                                // borderColor: [\n                                //     'rgba(0, 70, 240, 1)',\n                                // ],\n                                // borderWidth: 1\n                            },\n                            {\n                                label: \"Body\",\n                                data: [kartState.wg, kartState.ac, kartState.on, kartState.of, kartState.mt, kartState.sl, kartState.sw, kartState.sa, kartState.sg, kartState.tl, kartState.tw, kartState.ta, kartState.tg],\n                                backgroundColor: [\n                                    'rgba(10, 191, 2, 1)',\n                                ],\n                                // borderColor: [\n                                //     'rgba(10, 191, 2, 1)',\n                                // ],\n                                // borderWidth: 1\n                            },\n                            {\n                                label: \"Tire\",\n                                data: [tireState.wg, tireState.ac, tireState.on, tireState.of, tireState.mt, tireState.sl, tireState.sw, tireState.sa, tireState.sg, tireState.tl, tireState.tw, tireState.ta, tireState.tg],\n                                backgroundColor: [\n                                    'rgba(255, 245, 16, 1)',\n                                ],\n                                // borderColor: [\n                                //     'rgba(255, 245, 16, 1)',\n                                // ],\n                                // borderWidth: 1\n                            },\n                            {\n                                label: \"Glider\",\n                                data: [gliderState.wg, gliderState.ac, gliderState.on, gliderState.of, gliderState.mt, gliderState.sl, gliderState.sw, gliderState.sa, gliderState.sg, gliderState.tl, gliderState.tw, gliderState.ta, gliderState.tg],\n                                backgroundColor: [\n                                    'rgba(254, 56, 55, 1)',\n                                ],\n                                // borderColor: [\n                                //     'rgba(254, 56, 55, 1)',\n                                // ],\n                                // borderWidth: 1\n                            }\n                        ]\n                    }}\n                    // height={45}\n                    // width={100}\n                    options={{\n                        // indexAxis: \"y\",\n                        maintainAspectRatio: true,\n                        aspectRatio: 1.6,\n                        layout: {\n                            // padding: 20\n                        },\n                        responsive: true,\n                        plugins: {\n                            legend: {\n                                position: 'bottom',\n                                reverse: false,\n                                labels: {\n                                    color: 'rgba(255, 255, 255)',\n                                    boxHeight: 25,\n                                    padding: 30\n                                }\n                            }\n                        },\n                        scales: {\n                            x: {\n                                stacked: true,\n                                ticks: {\n                                    color: 'rgba(255, 255, 255)'\n                                }\n                            },\n                            y: {\n                                stacked: true,\n                                ticks: {\n                                    color: 'rgba(255, 255, 255)'\n                                }\n                            }\n                        }\n                    }}\n                />\n            </Fade>\n        </div>\n    </>\n    )\n}\n\nexport default Builder","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/components/Cart.js",["101","102","103","104","105","106","107","108","109","110","111","112","113","114"],"import React, {useState, useEffect} from \"react\"\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {deleteBuild} from \"../actions/builderActions\"\nimport Fade from \"react-reveal\"\nimport Button from \"react-bootstrap/Button\"\n// import Badge from \"react-bootstrap/Badge\"\nimport {Chart} from \"react-chartjs-2\"\nimport \"./Builder.css\"\n\nconst Cart = () => {\n    const [showExpand, setShowExpand] = useState(false)\n    const [expandID, setExpandID] = useState(\"\")\n    const [showDriverSpecs, setShowDriverSpecs] = useState(true)\n    const [showKartSpecs, setShowKartSpecs] = useState(true)\n    const [showTireSpecs, setShowTireSpecs] = useState(true)\n    const [showGliderSpecs, setShowGliderSpecs] = useState(true)\n    const combos = useSelector(state => state.builderReducer.comboArr)\n    const dispatch = useDispatch()\n    // useEffect(() => {          // example of syntax if needed\n    //     return () => {\n    //         cleanup\n    //     }\n    // }, [])\n    const reversedCombos = combos.map(item => item).reverse();\n    const handleExpandBuild = (e, id) => {\n        e.preventDefault()\n        setShowExpand(true)\n        setExpandID(id)\n        setShowDriverSpecs(true)\n        setShowKartSpecs(true)\n        setShowTireSpecs(true)\n        setShowGliderSpecs(true)\n    }\n    const handleShrinkBuild = (e) => {\n        e.preventDefault()\n        setShowExpand(false)\n        setExpandID(\"\")\n    }\n\n    const handleDriverSpecs = () => {\n        setShowDriverSpecs(!showDriverSpecs)\n    }\n\n    const handleKartSpecs = () => {\n        setShowKartSpecs(!showKartSpecs)\n    }\n\n    const handleTireSpecs = () => {\n        setShowTireSpecs(!showTireSpecs)\n    }\n\n    const handleGliderSpecs = () => {\n        setShowGliderSpecs(!showGliderSpecs)\n    }\n\n    return (\n    <>\n    <Fade top>\n        <div className=\"container\">\n            <div className=\"row mx-0 pt-2 pb-5 justify-content-center\">\n                <img style={{width: \"625px\"}} src=\"img/kart-cart.png\" />\n            </div>\n        </div>\n    </Fade>\n    <Fade bottom>\n        <div className=\"container\">\n            {reversedCombos.map(combo => {\n                return (\n                    <>\n                    <div className=\"row text-center mb-3 justify-content-center\">\n                    {(!showExpand || expandID !== combo.id) && <>\n                        <div className=\"col mb-2 justify-content-center\">\n                        {/* <span className=\"col-lg-6 col-sm-12 px-0 d-flex justify-content-lg-end justify-content-sm-center\"> */}\n                            <Button className=\"btn button-gray m-1\" onClick={(e) => handleExpandBuild(e, combo.id)}><img className=\"responsiveItem\" key={combo.driver.id} src={`img/items/${combo.driver.img}`} /></Button>\n                            <Button className=\"btn button-gray m-1\" onClick={(e) => handleExpandBuild(e, combo.id)}><img className=\"responsiveItem\" key={combo.kart.id} src={`img/items/${combo.kart.img}`} /></Button>\n                        {/* </span> */}\n                        {/* <span className=\"col-lg-6 col-sm-12 px-0 d-flex justify-content-lg-start justify-content-sm-center\"> */}\n                            <Button className=\"btn button-gray m-1\" onClick={(e) => handleExpandBuild(e, combo.id)}><img className=\"responsiveItem\" key={combo.tire.id} src={`img/items/${combo.tire.img}`} /></Button>\n                            <Button className=\"btn button-gray m-1\" onClick={(e) => handleExpandBuild(e, combo.id)}><img className=\"responsiveItem\" key={combo.glider.id} src={`img/items/${combo.glider.img}`} /></Button>\n                        {/* </span> */}\n                        </div>\n                        <Fade>\n                            <div>\n                                <Button className=\"btn button-green text-white m-1 mb-4\" onClick={(e) => handleExpandBuild(e, combo.id)}><img width=\"155px\" src=\"/img/expand-button.png\" /></Button>\n                                <Button className=\"btn button-red m-1 mb-4\" onClick={() => dispatch(deleteBuild(combo.id))}><img width=\"150px\" src=\"/img/delete-button.png\" /></Button>\n                            </div>\n                        </Fade>\n                    </>}\n                    {showExpand && expandID === combo.id && <>\n                        <div className=\"col mb-2 justify-content-center\">\n                            <Button className=\"btn button-blue m-1\" onClick={handleDriverSpecs}><img className=\"responsiveItem\" key={combo.driver.id} src={`img/items/${combo.driver.img}`} /></Button>\n                            <Button className=\"btn button-green m-1\" onClick={handleKartSpecs}><img className=\"responsiveItem\" key={combo.kart.id} src={`img/items/${combo.kart.img}`} /></Button>\n                            <Button className=\"btn button-yellow m-1\" onClick={handleTireSpecs}><img className=\"responsiveItem\" key={combo.tire.id} src={`img/items/${combo.tire.img}`} /></Button>\n                            <Button className=\"btn button-red m-1\" onClick={handleGliderSpecs}><img className=\"responsiveItem\" key={combo.glider.id} src={`img/items/${combo.glider.img}`} /></Button>\n                        </div>\n                        <Fade>\n                            <div className=\"text-white\">\n                                <b>CLICK ABOVE TO SHOW/HIDE SPECS</b>\n                            </div>\n                        </Fade>\n                        <div className=\"mb-2\">\n                            <Fade>\n                                <Chart\n                                    type=\"bar\"\n                                    data={{\n                                        labels: [\"Weight\", \"Acceleration\", \"On-Road Traction\", \"Off-Road Traction\", \"Mini-Turbo\", \"Ground Speed\", \"Water Speed\", \"Anti-Gravity Speed\", \"Air Speed\", \"Ground Handling\", \"Water Handling\", \"Anti-Gravity Handling\", \"Air Handling\"],\n                                        datasets: [\n                                            {\n                                                label: \"Driver\",\n                                                data: showDriverSpecs ? [combo.driver.wg, combo.driver.ac, combo.driver.on, combo.driver.of, combo.driver.mt, combo.driver.sl, combo.driver.sw, combo.driver.sa, combo.driver.sg, combo.driver.tl, combo.driver.tw, combo.driver.ta, combo.driver.tg] : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                                                backgroundColor: [\n                                                    'rgba(0, 70, 240, 1)',\n                                                ],\n                                                // borderColor: [\n                                                //     'rgba(0, 70, 240, 1)',\n                                                // ],\n                                                // borderWidth: 1\n                                            },\n                                            {\n                                                label: \"Body\",\n                                                data: showKartSpecs ? [combo.kart.wg, combo.kart.ac, combo.kart.on, combo.kart.of, combo.kart.mt, combo.kart.sl, combo.kart.sw, combo.kart.sa, combo.kart.sg, combo.kart.tl, combo.kart.tw, combo.kart.ta, combo.kart.tg] : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                                                backgroundColor: [\n                                                    'rgba(10, 191, 2, 1)',\n                                                ],\n                                                // borderColor: [\n                                                //     'rgba(10, 191, 2, 1)',\n                                                // ],\n                                                // borderWidth: 1\n                                            },\n                                            {\n                                                label: \"Tire\",\n                                                data: showTireSpecs ? [combo.tire.wg, combo.tire.ac, combo.tire.on, combo.tire.of, combo.tire.mt, combo.tire.sl, combo.tire.sw, combo.tire.sa, combo.tire.sg, combo.tire.tl, combo.tire.tw, combo.tire.ta, combo.tire.tg] : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                                                backgroundColor: [\n                                                    'rgba(255, 245, 16, 1)',\n                                                ],\n                                                // borderColor: [\n                                                //     'rgba(255, 245, 16, 1)',\n                                                // ],\n                                                // borderWidth: 1\n                                            },\n                                            {\n                                                label: \"Glider\",\n                                                data: showGliderSpecs ? [combo.glider.wg, combo.glider.ac, combo.glider.on, combo.glider.of, combo.glider.mt, combo.glider.sl, combo.glider.sw, combo.glider.sa, combo.glider.sg, combo.glider.tl, combo.glider.tw, combo.glider.ta, combo.glider.tg] : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n                                                backgroundColor: [\n                                                    'rgba(254, 56, 55, 1)',\n                                                ],\n                                                // borderColor: [\n                                                //     'rgba(254, 56, 55, 1)',\n                                                // ],\n                                                // borderWidth: 1\n                                            }\n                                        ]\n                                    }}\n                                    height={450}\n                                    // width={100}\n                                    options={{\n                                        indexAxis: \"y\",\n                                        maintainAspectRatio: false,\n                                        aspectRatio: 1.5,\n                                        layout: {\n                                            // padding: 20\n                                        },\n                                        responsive: true,\n                                        plugins: {\n                                            legend: {\n                                                display: false,\n                                                position: 'left',\n                                                reverse: false,\n                                                labels: {\n                                                    color: 'rgba(255, 255, 255)',\n                                                    boxHeight: 25,\n                                                    padding: 30\n                                                }\n                                            },\n                                            // tooltip: {\n                                            //     position: \"average\",\n                                            //     xAlign: \"right\",\n                                            //     yAlign: \"bottom\"\n                                            // }\n                                        },\n                                        // elements: {\n                                        //     bar: {\n                                        //         borderRadius: 7.5\n                                        //     }\n                                        // },\n                                        scales: {\n                                            x: {\n                                                stacked: true,\n                                                ticks: {\n                                                    color: 'rgba(255, 255, 255)'\n                                                }\n                                            },\n                                            y: {\n                                                stacked: true,\n                                                ticks: {\n                                                    color: 'rgba(255, 255, 255)'\n                                                }\n                                            }\n                                        }\n                                    }}\n                                />\n                            </Fade>\n                        </div>\n                        <div>\n                        <Button className=\"btn button-yellow text-white m-1\" onClick={(e) => handleShrinkBuild(e)}><img width=\"145px\" src=\"/img/shrink-button.png\" /></Button>\n                            <Button className=\"btn button-red m-1\" onClick={() => dispatch(deleteBuild(combo.id))}><img width=\"150px\" src=\"/img/delete-button.png\" /></Button>\n                        </div>\n                        </>}\n                    </div>\n                    </>\n                )\n            })}\n        </div>\n    </Fade>\n    </>\n    )\n}\n\nexport default Cart","/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/assets/MK8-data.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/reducers/builderReducer.js",[],"/Users/mothership/Desktop/digitalcrafts-coursework/MK8-React-Project/src/actions/builderActions.js",[],{"ruleId":"115","severity":1,"message":"116","line":1,"column":16,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":25,"column":8,"nodeType":"125","endLine":25,"endColumn":10,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":37,"column":25,"nodeType":"129","endLine":37,"endColumn":84},{"ruleId":"127","severity":1,"message":"128","line":45,"column":37,"nodeType":"129","endLine":45,"endColumn":81},{"ruleId":"127","severity":1,"message":"128","line":53,"column":179,"nodeType":"129","endLine":53,"endColumn":229},{"ruleId":"127","severity":1,"message":"128","line":60,"column":37,"nodeType":"129","endLine":60,"endColumn":79},{"ruleId":"127","severity":1,"message":"128","line":68,"column":176,"nodeType":"129","endLine":68,"endColumn":226},{"ruleId":"127","severity":1,"message":"128","line":75,"column":37,"nodeType":"129","endLine":75,"endColumn":79},{"ruleId":"127","severity":1,"message":"128","line":83,"column":177,"nodeType":"129","endLine":83,"endColumn":227},{"ruleId":"127","severity":1,"message":"128","line":90,"column":37,"nodeType":"129","endLine":90,"endColumn":81},{"ruleId":"127","severity":1,"message":"128","line":98,"column":178,"nodeType":"129","endLine":98,"endColumn":228},{"ruleId":"127","severity":1,"message":"128","line":105,"column":184,"nodeType":"129","endLine":105,"endColumn":232},{"ruleId":"127","severity":1,"message":"128","line":115,"column":25,"nodeType":"129","endLine":115,"endColumn":82},{"ruleId":"115","severity":1,"message":"116","line":1,"column":26,"nodeType":"117","messageId":"118","endLine":1,"endColumn":35},{"ruleId":"127","severity":1,"message":"128","line":61,"column":17,"nodeType":"129","endLine":61,"endColumn":73},{"ruleId":"127","severity":1,"message":"128","line":74,"column":117,"nodeType":"129","endLine":74,"endColumn":211},{"ruleId":"127","severity":1,"message":"128","line":75,"column":117,"nodeType":"129","endLine":75,"endColumn":207},{"ruleId":"127","severity":1,"message":"128","line":78,"column":117,"nodeType":"129","endLine":78,"endColumn":207},{"ruleId":"127","severity":1,"message":"128","line":79,"column":117,"nodeType":"129","endLine":79,"endColumn":211},{"ruleId":"127","severity":1,"message":"128","line":84,"column":138,"nodeType":"129","endLine":84,"endColumn":188},{"ruleId":"127","severity":1,"message":"128","line":85,"column":125,"nodeType":"129","endLine":85,"endColumn":175},{"ruleId":"127","severity":1,"message":"128","line":91,"column":97,"nodeType":"129","endLine":91,"endColumn":191},{"ruleId":"127","severity":1,"message":"128","line":92,"column":96,"nodeType":"129","endLine":92,"endColumn":186},{"ruleId":"127","severity":1,"message":"128","line":93,"column":97,"nodeType":"129","endLine":93,"endColumn":187},{"ruleId":"127","severity":1,"message":"128","line":94,"column":96,"nodeType":"129","endLine":94,"endColumn":190},{"ruleId":"127","severity":1,"message":"128","line":205,"column":116,"nodeType":"129","endLine":205,"endColumn":166},{"ruleId":"127","severity":1,"message":"128","line":206,"column":116,"nodeType":"129","endLine":206,"endColumn":166},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["132"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [dispatch]",{"range":"135","text":"136"},[1112,1114],"[dispatch]"]